// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MenuFilter component matchs snapshoot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="chakra-ui-light"
  >
    <div>
      <button
        aria-controls="menu-list-:r1:"
        aria-expanded="false"
        aria-haspopup="menu"
        class="chakra-button chakra-menu__menu-button css-1gwkhml"
        id="menu-button-:r1:"
        type="button"
      >
        <span
          class="css-xl71ch"
        >
          Filter
        </span>
        <span
          class="chakra-button__icon css-1hzyiq5"
        >
          <svg
            aria-hidden="true"
            class="chakra-icon css-1uwb1nc"
            focusable="false"
            viewBox="0 0 24 24"
          >
            <g
              stroke="currentColor"
              stroke-width="1.5"
            >
              <path
                d="M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
                fill="none"
                stroke-linecap="round"
              />
              <path
                d="M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
                fill="currentColor"
                stroke-linecap="round"
              />
              <circle
                cx="12"
                cy="12"
                fill="none"
                r="11.25"
                stroke-miterlimit="10"
              />
            </g>
          </svg>
        </span>
      </button>
      <div
        class="css-r6z5ec"
        style="visibility: hidden; position: absolute; min-width: max-content; inset: 0 auto auto 0;"
      >
        <div
          aria-orientation="vertical"
          class="chakra-menu__menu-list css-1kfu8nn"
          id="menu-list-:r1:"
          role="menu"
          style="transform-origin: var(--popper-transform-origin); opacity: 0; visibility: hidden; transform: scale(0.8) translateZ(0);"
          tabindex="-1"
        >
          <button
            class="chakra-menu__menuitem css-1m72dwe"
            data-index="0"
            data-testid="menu-item"
            id="menu-list-:r1:-menuitem-:r2:"
            role="menuitem"
            tabindex="-1"
            type="button"
          >
            Created at
          </button>
          <button
            class="chakra-menu__menuitem css-1m72dwe"
            data-index="1"
            data-testid="menu-item"
            id="menu-list-:r1:-menuitem-:r3:"
            role="menuitem"
            tabindex="-1"
            type="button"
          >
            Name
          </button>
          <button
            class="chakra-menu__menuitem css-1m72dwe"
            data-index="2"
            data-testid="menu-item"
            id="menu-list-:r1:-menuitem-:r4:"
            role="menuitem"
            tabindex="-1"
            type="button"
          >
            Priority
          </button>
        </div>
      </div>
      <span
        hidden=""
        id="__chakra_env"
      />
    </div>
    <div
      class="chakra-portal"
    >
      <div
        aria-label="Notifications-top"
        aria-live="polite"
        id="chakra-toast-manager-top"
        role="region"
        style="position: fixed; z-index: var(--toast-z-index, 5500); pointer-events: none; display: flex; flex-direction: column; margin: 0px auto;"
      />
      <div
        aria-label="Notifications-top-left"
        aria-live="polite"
        id="chakra-toast-manager-top-left"
        role="region"
        style="position: fixed; z-index: var(--toast-z-index, 5500); pointer-events: none; display: flex; flex-direction: column;"
      />
      <div
        aria-label="Notifications-top-right"
        aria-live="polite"
        id="chakra-toast-manager-top-right"
        role="region"
        style="position: fixed; z-index: var(--toast-z-index, 5500); pointer-events: none; display: flex; flex-direction: column;"
      />
      <div
        aria-label="Notifications-bottom-left"
        aria-live="polite"
        id="chakra-toast-manager-bottom-left"
        role="region"
        style="position: fixed; z-index: var(--toast-z-index, 5500); pointer-events: none; display: flex; flex-direction: column;"
      />
      <div
        aria-label="Notifications-bottom"
        aria-live="polite"
        id="chakra-toast-manager-bottom"
        role="region"
        style="position: fixed; z-index: var(--toast-z-index, 5500); pointer-events: none; display: flex; flex-direction: column; margin: 0px auto;"
      />
      <div
        aria-label="Notifications-bottom-right"
        aria-live="polite"
        id="chakra-toast-manager-bottom-right"
        role="region"
        style="position: fixed; z-index: var(--toast-z-index, 5500); pointer-events: none; display: flex; flex-direction: column;"
      />
    </div>
  </body>,
  "container": <div>
    <button
      aria-controls="menu-list-:r1:"
      aria-expanded="false"
      aria-haspopup="menu"
      class="chakra-button chakra-menu__menu-button css-1gwkhml"
      id="menu-button-:r1:"
      type="button"
    >
      <span
        class="css-xl71ch"
      >
        Filter
      </span>
      <span
        class="chakra-button__icon css-1hzyiq5"
      >
        <svg
          aria-hidden="true"
          class="chakra-icon css-1uwb1nc"
          focusable="false"
          viewBox="0 0 24 24"
        >
          <g
            stroke="currentColor"
            stroke-width="1.5"
          >
            <path
              d="M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
              fill="none"
              stroke-linecap="round"
            />
            <path
              d="M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
              fill="currentColor"
              stroke-linecap="round"
            />
            <circle
              cx="12"
              cy="12"
              fill="none"
              r="11.25"
              stroke-miterlimit="10"
            />
          </g>
        </svg>
      </span>
    </button>
    <div
      class="css-r6z5ec"
      style="visibility: hidden; position: absolute; min-width: max-content; inset: 0 auto auto 0;"
    >
      <div
        aria-orientation="vertical"
        class="chakra-menu__menu-list css-1kfu8nn"
        id="menu-list-:r1:"
        role="menu"
        style="transform-origin: var(--popper-transform-origin); opacity: 0; visibility: hidden; transform: scale(0.8) translateZ(0);"
        tabindex="-1"
      >
        <button
          class="chakra-menu__menuitem css-1m72dwe"
          data-index="0"
          data-testid="menu-item"
          id="menu-list-:r1:-menuitem-:r2:"
          role="menuitem"
          tabindex="-1"
          type="button"
        >
          Created at
        </button>
        <button
          class="chakra-menu__menuitem css-1m72dwe"
          data-index="1"
          data-testid="menu-item"
          id="menu-list-:r1:-menuitem-:r3:"
          role="menuitem"
          tabindex="-1"
          type="button"
        >
          Name
        </button>
        <button
          class="chakra-menu__menuitem css-1m72dwe"
          data-index="2"
          data-testid="menu-item"
          id="menu-list-:r1:-menuitem-:r4:"
          role="menuitem"
          tabindex="-1"
          type="button"
        >
          Priority
        </button>
      </div>
    </div>
    <span
      hidden=""
      id="__chakra_env"
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
